type Profile_2 = record {
    "name": text;
    "description": text;
    "keywords": vec text;
};

type Profile = Profile_2;

type RawRand = record {
    vec nat8
};

type Address = record {
    "id": nat32;
    "name": opt text;
};

type HeaderField = record { text; text; };
type HttpQueryHeaderField = record { vec nat8; vec nat8 };

type HttpRequest = record {
    method: text;
    url: text;
    headers: vec HeaderField;
    body: blob;
    upgrade: opt bool;
};

type HttpQuery = record {
    method: text;
    headers: vec HttpQueryHeaderField;
    uri: text;
    body: blob;
};

service : () -> {
    "getSelf": () -> (Profile_2) query;
    "get": (text) -> (Profile_2) query;
    "update": (Profile_2) -> ();
    "search": (text) -> (opt Profile_2) query;
    "increment": () -> ();
    "set": (nat) -> ();
    "greet": (text) -> (text) query;
    "balance": () -> (nat) query;
    "balance128": () -> (nat) query;
    "m_data_certificate": () -> (text) query;
    "m_time": () -> (nat) query;
    "m_caller": () -> (text) query;
    "m_id": () -> (text) query;
    "m_stable_size": () -> (nat);
    "m_stable64_grow": () -> () query;
    "raw_rand": () -> (vec nat8);
    "path_test": () -> (text);
    "m_stable_read": (nat64, nat64) -> (vec nat8);
    "m_stable_write": (nat64, vec nat8) -> ();
    "get_all_file": () -> (vec text);
    "create_file": (text, text) -> (vec text); 
    "get_http_request_history": () -> (vec HttpQuery);
    "clear_get_http_request_history": () -> ();
    "get_http_update_request_history": () -> (vec HttpRequest);
    "get_current_time_list": () -> (vec nat64);
    "get_test": () -> (vec nat8);
    "cat": (text) -> (text);
    "ls": (text) -> (vec text);
    "mkdir": (text) -> ();
    "rm": (text) -> ();
    "write_file": (text, text) -> ();
    "test": (nat64) -> (text);
    "grow_heap": (text) -> ();
    "install_code_for_it": (variant { reinstall; install; upgrade }) -> ();
}

